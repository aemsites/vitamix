name: Integration Tests

on:
  issue_comment:
    types: [created]

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    
    # Only run if comment contains trigger phrase and is on a PR
    if: contains(github.event.comment.body, '/run-tests') && github.event.issue.pull_request != null
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        # Checkout the PR branch
        ref: ${{ format('refs/pull/{0}/head', github.event.issue.number) }}
    
    - name: Use Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright Browsers
      run: npx playwright install chromium --with-deps
    
    - name: Get PR branch name
      id: branch
      run: |
        # Get the actual branch name from the PR using REST API
        PR_DATA=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.issue.number }}")
        BRANCH_NAME=$(echo "$PR_DATA" | jq -r '.head.ref')
        echo "branch=$BRANCH_NAME" >> $GITHUB_OUTPUT
    
    - name: Run Playwright tests
      env:
        BRANCH: ${{ steps.branch.outputs.branch }}
        BASE_URL: https://${{ steps.branch.outputs.branch }}--vitamix--aemsites.aem.network
      run: npx playwright test --reporter=html
    
    - name: Upload Playwright Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-${{ github.run_id }}
        path: playwright-report/
        retention-days: 7
    
    - name: Comment on PR - Results
      if: always()
      uses: actions/github-script@v7
      with:
        script: |
          const success = '${{ job.status }}' === 'success';
          const emoji = success ? '‚úÖ' : '‚ùå';
          const status = success ? 'passed' : 'failed';
          const message = success ? 
            'All Playwright tests completed successfully.' : 
            'Some tests failed. Check the workflow run for details.';
          
          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `${emoji} **Integration tests ${status}!**\n\n${message}\n\nüìä [View detailed report](${context.payload.repository.html_url}/actions/runs/${context.runId})`
          });